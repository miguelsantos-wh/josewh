upstream n<Project>{
    # Si utilizas UWSGI
    server unix://home/<server_host>/<project>/<project>_uwsgi.sock;
    # Si utilizas Supervisor
    server <Private_IP_Address>:<Port>;
}


server {
    # Escuchar en el puerto 80
    listen 80;

    # Para solicitudes a estos dominios
    server_name <server_domain>;

    # Buscar en este directorio los archivos a servir
    location /static/ {
        alias   /home/<server_host>/<project>/.static/;
        include h5bp/location/expires.conf;
    }

    # Archivos subidos por los usuarios
    location /media/ {
        alias   /home/<server_host>/<project>/.media/;
        include h5bp/location/expires.conf;
    }

    # Guardar los logs en los siguientes archivos
    access_log  /home/<server_host>/<project>/.logs/nginx/<project>.access.log;
    error_log   /home/<server_host>/<project>/.logs/nginx/<project>.error.log;

    location / {
        include         uwsgi_params;
        uwsgi_pass      n<Project>;
        proxy_redirect  off;

        client_max_body_size    15M;
        client_body_buffer_size 128k;

        proxy_read_timeout  600s;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For
        $proxy_add_x_forwarded_for;
    }

    # WebSocket
    location /ws/ {
        include             uwsgi_params;
        proxy_http_version  1.1;
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection "upgrade";
        proxy_pass          http://unix:/home/<server_host>/<project>/<project>_websocket.sock;
    }

    # Codificacion
    charset utf-8;

    # Configuracion Basica
    include h5bp/basic.conf;
}


# Redirect a https
server {
    listen 80;
    # listen on the host
    server_name <server_domain>; www.<server_domain>;
    return 301 https://$host$request_uri;
}


# Redirect todos los subdominios a https
server {
  listen 80;

  # listen on the host
  server_name *.<server_domain>;

  # and redirect to the non-www host (declared below)
  return 301 https://$host$request_uri;
}


# Server HTTPS
server {
    listen 443 ssl http2;

    # Para solicitudes a estos dominios
    server_name <server_domain>;

    # En caso usar cloudflare puede omitirse estos parametros
    ssl on;
    ssl_certificate       /home/<server_host>/<project>/.config_project/ssl_certs/<project>.com.crt;
    ssl_certificate_key   /home/<server_host>/<project>/.config_project/ssl_certs/<project>.com.key;

    # Configuracion SSL
    include h5bp/directive-only/ssl.conf;

    # Buscar en este directorio los archivos a servir
    location /static/ {
    alias /home/<server_host>/<project>/.static/;
        include h5bp/location/expires.conf;
    }

    #Archivos subidos por los usuarios
    location /media/ {
    alias /home/<server_host>/<project>/.media/;
        include h5bp/location/expires.conf;
    }


    # Guardar los logs en los siguientes archivos
    access_log  /home/<server_host>/<project>/.logs/nginx/<project>.access.log;
    error_log   /home/<server_host>/<project>/.logs/nginx/<project>.error.log;

    location / {
        include         uwsgi_params;
        uwsgi_pass      n<Project>;
        proxy_redirect  off;

        client_max_body_size    15M;
        client_body_buffer_size 128k;

        proxy_read_timeout  600s;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For
        $proxy_add_x_forwarded_for;
    }

    # WebSocket
    location /ws/ {
        include             uwsgi_params;
        proxy_http_version  1.1;
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection "upgrade";
        proxy_pass          http://unix:/home/<server_host>/<project>/<project>_websocket.sock;
    }

    #Codificacion
    charset utf-8;

    #Redirect Sitemap
    location ~ /sitemap.xml$ {
        return 301 /sitemap.xml/$1;
    }

    #Configuracion Basica
    include h5bp/basic.conf;


    #Redirect Sitemap
    location ~ /sitemap.xml$ {
        return 301 /sitemap.xml/$1;
    }
}


# Redirect a sitio con www
server {
    listen 443 ssl http2;

    # Para solicitudes a estos dominios
    server_name <server_domain>;
  
    ssl on;
    ssl_certificate       /home/<server_host>/<project>/.config_project/ssl_certs/<project>.com.crt;
    ssl_certificate_key   /home/<server_host>/<project>/.config_project/ssl_certs/<project>.com.key;

    # and redirect to the non-www host (declared below)
    return 301 https://$host$request_uri;
}